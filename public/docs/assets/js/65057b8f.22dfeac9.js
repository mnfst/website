"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[992],{8959:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"validation","title":"Validation","description":"Introduction","source":"@site/content/validation.md","sourceDirName":".","slug":"/validation","permalink":"/docs/validation","draft":false,"unlisted":false,"editUrl":"https://github.com/mnfst/docs/blob/master/validation.md","tags":[],"version":"current","frontMatter":{"id":"validation"},"sidebar":"docSidebar","previous":{"title":"CRUD Operations","permalink":"/docs/crud"},"next":{"title":"Authentication","permalink":"/docs/authentication"}}');var s=i(4848),d=i(8453);const r={id:"validation"},l="Validation",a={},o=[{value:"Introduction",id:"introduction",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Inline syntax",id:"inline-syntax",level:2},{value:"Validate optional properties",id:"validate-optional-properties",level:2},{value:"Validation response",id:"validation-response",level:2},{value:"Available validators",id:"available-validators",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"validation",children:"Validation"})}),"\n",(0,s.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsxs)(n.p,{children:["Implementing ",(0,s.jsx)(n.strong,{children:"server-side validation"})," is very easy with Manifest."]}),"\n",(0,s.jsxs)(n.p,{children:["You can use the built-in ",(0,s.jsx)(n.strong,{children:"custom validators"})," to ensure that the data you are receiving is correctly formatted."]}),"\n",(0,s.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,s.jsxs)(n.p,{children:["In your ",(0,s.jsx)(n.strong,{children:"backend.yml"}),", you can add a ",(0,s.jsx)(n.em,{children:"validation"})," object that lists the properties and their validators:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"entities:\n  Dog:\n    properties:\n      - name\n      - { name: age, type: number }\n    validation:\n      name: { minLength: 3 } # The name should have at least 3 characters.\n      age: { min: 1, max: 30 } # Age should be a number between 1 and 30.\n"})}),"\n",(0,s.jsxs)(n.admonition,{title:"Tip",type:"tip",children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Type validation"})," is natively implemented with ",(0,s.jsx)(n.a,{href:"/docs/entities#property-types",children:"property types"}),". You do not need to set it."]}),(0,s.jsxs)(n.p,{children:["Ex: sending a ",(0,s.jsx)(n.em,{children:"string"})," value for a ",(0,s.jsx)(n.a,{href:"/docs/entities#boolean",children:"boolean"})," property type will throw an error."]})]}),"\n",(0,s.jsx)(n.h2,{id:"inline-syntax",children:"Inline syntax"}),"\n",(0,s.jsxs)(n.p,{children:["If you want to keep it short you can simply pass the ",(0,s.jsx)(n.strong,{children:"validation"})," object to the ",(0,s.jsx)(n.strong,{children:"property object"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"entities:\n  Author \ud83e\uddd1\ud83c\udffd\u200d\ud83e\uddb1:\n    properties:\n      - name\n      - { name: email, type: email, validation: { isNotEmpty: true } }\n      - { name: bio, type: textarea, validation: { maxLength: 300 } }\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Both syntaxes (block and inline) can be used simultaneously. In case of declaration conflict, the ",(0,s.jsx)(n.strong,{children:"inline"})," declaration will prevail."]}),"\n",(0,s.jsx)(n.h2,{id:"validate-optional-properties",children:"Validate optional properties"}),"\n",(0,s.jsxs)(n.p,{children:["If you have some values that are optional ",(0,s.jsx)(n.strong,{children:"but"})," that need to be validated ",(0,s.jsx)(n.strong,{children:"if present"}),", you can add the ",(0,s.jsx)(n.code,{children:"isOptional"})," validator. The value will be compared against validators only if not ",(0,s.jsx)(n.em,{children:"undefined"})," or ",(0,s.jsx)(n.em,{children:"null"}),". Example:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"entities:\n  Employee:\n    properties:\n      - name\n      - {\n          name: email,\n          type: email,\n          validation: { contains: '@company.com', isOptional: true }\n        } #  If provided, the email should contain \"@company.com\"\n"})}),"\n",(0,s.jsx)(n.h2,{id:"validation-response",children:"Validation response"}),"\n",(0,s.jsx)(n.p,{children:"If the validation fails, the response will list the validation error(s) in its body:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:'// Create a new Employee\nPOST /api/dynamic/employees\nContent-Type: application/json\n{\n    "name": "John Doe",\n    "email": "john@manifest.build"\n}\n\n// Response.\n[\n    {\n        "property": "email",\n        "constraints": {\n            "contains": "The value must contain @company.com"\n        }\n    }\n]\n'})}),"\n",(0,s.jsx)(n.h2,{id:"available-validators",children:"Available validators"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Validator"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"required"})}),(0,s.jsx)(n.td,{children:"boolean"}),(0,s.jsx)(n.td,{children:"Indicates whether the property must not be empty."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"isDefined"})}),(0,s.jsx)(n.td,{children:"boolean"}),(0,s.jsx)(n.td,{children:"Checks if value is defined (!== undefined, !== null)."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"isOptional"})}),(0,s.jsx)(n.td,{children:"boolean"}),(0,s.jsx)(n.td,{children:"Checks if given value is empty (=== null, === undefined) and ignores all validators."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"equals"})}),(0,s.jsx)(n.td,{children:"any"}),(0,s.jsx)(n.td,{children:'Checks if value equals ("===") comparison.'})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"notEquals"})}),(0,s.jsx)(n.td,{children:"any"}),(0,s.jsx)(n.td,{children:'Checks if value not equal ("!==") comparison.'})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"isEmpty"})}),(0,s.jsx)(n.td,{children:"boolean"}),(0,s.jsx)(n.td,{children:"Indicates whether the property can be empty."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"isNotEmpty"})}),(0,s.jsx)(n.td,{children:"boolean"}),(0,s.jsxs)(n.td,{children:["Indicates whether the property must not be empty. Alias for ",(0,s.jsx)(n.code,{children:"required"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"isIn"})}),(0,s.jsx)(n.td,{children:"array"}),(0,s.jsx)(n.td,{children:"Checks if value is in an array of allowed values."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"isNotIn"})}),(0,s.jsx)(n.td,{children:"array"}),(0,s.jsx)(n.td,{children:"Checks if value not in an array of disallowed values."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"min"})}),(0,s.jsx)(n.td,{children:"number"}),(0,s.jsx)(n.td,{children:"The minimum value or length allowed for the property."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"max"})}),(0,s.jsx)(n.td,{children:"number"}),(0,s.jsx)(n.td,{children:"The maximum value or length allowed for the property."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"contains"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Checks if string contains the seed."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"notContains"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Checks if string does not contain the seed."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"isAlpha"})}),(0,s.jsx)(n.td,{children:"boolean"}),(0,s.jsx)(n.td,{children:"Checks if the string contains only letters (a-zA-Z)."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"isAlphanumeric"})}),(0,s.jsx)(n.td,{children:"boolean"}),(0,s.jsx)(n.td,{children:"Checks if the string contains only letters and numbers."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"isAscii"})}),(0,s.jsx)(n.td,{children:"boolean"}),(0,s.jsx)(n.td,{children:"Checks if the string contains ASCII chars only."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"isEmail"})}),(0,s.jsx)(n.td,{children:"boolean"}),(0,s.jsx)(n.td,{children:"Checks if the string is an email."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"isJSON"})}),(0,s.jsx)(n.td,{children:"boolean"}),(0,s.jsx)(n.td,{children:"Checks if the string is valid JSON."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"minLength"})}),(0,s.jsx)(n.td,{children:"number"}),(0,s.jsx)(n.td,{children:"Checks if the string's length is not less than given number."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"maxLength"})}),(0,s.jsx)(n.td,{children:"number"}),(0,s.jsx)(n.td,{children:"Checks if the string's length is not more than given number."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"matches"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Checks if string matches the pattern."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"isMimeType"})}),(0,s.jsx)(n.td,{children:"boolean"}),(0,s.jsx)(n.td,{children:"Checks if the string matches to a valid MIME type format."})]})]})]})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>l});var t=i(6540);const s={},d=t.createContext(s);function r(e){const n=t.useContext(d);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(d.Provider,{value:n},e.children)}}}]);